>>> import importlib
>>> BaseGeometry = importlib.import_module('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Valid integer values
>>> bg.integer_validator("width", 5)  # Should not raise an exception
>>> bg.integer_validator("height", 10)  # Should not raise an exception
>>> bg.integer_validator("length", 1)  # Minimum valid integer, should not raise an exception
>>> bg.integer_validator("depth", 1000)  # Large valid integer, should not raise an exception

#  Invalid values (less than or equal to zero)
   >>> bg.integer_validator("height", -3)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: height must be greater than 0

   >>> bg.integer_validator("length", 0)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: length must be greater than 0

   >>> bg.integer_validator("depth", -1000)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: depth must be greater than 0

#  with positives integers
   >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
   >>> bg = BaseGeometry()

#  with positive integer
   >>> bg.integer_validator("my_int", 12)

#  with negative integer
   >>> bg.integer_validator("number", -12)
   Traceback (most recent call last):
   ValueError: number must be greater than 0

#  with 3 arguments
   >>> bg.integer_validator("numbers", 0, 1)
   Traceback (most recent call last):
   TypeError: integer_validator() takes 3 positional arguments but 4 were given

#  with infinite integer
   >>> bg.integer_validator("infnumber", int('inf'))
   Traceback (most recent call last):
   ValueError: invalid literal for int() with base 10: 'inf'

#  Invalid valus (less than or equal to zero)
   >>> bg.integer_validator("height", -3)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: height must be greater than 0

   >>> bg.integer_validator("length", 0)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: length must be greater than 0

   >>> bg.integer_validator("depth", -1000)  # Raises ValueError
   Traceback (most recent call last):
    ...
   ValueError: depth must be greater than 0
