>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Test valid cases
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Test invalid type
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

# Test value 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

# Test negative value
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

# Test area() method
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Additional test cases
>>> bg.integer_validator("float", 1.5)
Traceback (most recent call last):
    ...
TypeError: float must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
    ...
TypeError: bool must be an integer

>>> bg.integer_validator("list", [1])
Traceback (most recent call last):
    ...
TypeError: list must be an integer
